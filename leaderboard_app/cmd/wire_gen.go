// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/MinhTamPhan/coding-challenges/leaderboard_app/internal/applications"
	"github.com/MinhTamPhan/coding-challenges/leaderboard_app/internal/handlers"
	"github.com/MinhTamPhan/coding-challenges/leaderboard_app/internal/repositories"
	"github.com/MinhTamPhan/coding-challenges/leaderboard_app/internal/routers"
	"github.com/MinhTamPhan/coding-challenges/leaderboard_app/internal/services"
)

// Injectors from wire.go:

func wireLeaderBoardApiApplication() (applications.Application, error) {
	v := routers.ProvideMiddleware()
	echo := routers.NewEcho(v)
	quizRepository := repositories.NewInMemQuizRepository()
	leaderboardRepository := repositories.NewInMemLeaderboardRepository()
	leaderBoardService := services.NewLeaderBoardService(quizRepository, leaderboardRepository)
	leaderBoardHandler := handlers.NewLeaderBoardHandler(leaderBoardService)
	leaderBoardRouter := routers.NewLeaderBoardRouter(leaderBoardHandler)
	handler := routers.NewHttpHandler(echo, leaderBoardRouter)
	restServer := applications.ProvideHttpRestful(handler)
	metricServer := applications.ProvideHttpMetric()
	application := applications.NewRestApplication(restServer, metricServer)
	return application, nil
}
